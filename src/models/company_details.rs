/*
 * API
 *
 * ## Welcome  This is a place to put general notes and extra information, for internal use.  To get started designing/documenting this API, select a version on the left. # Title No Description
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models::CompanyObject;

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct CompanyDetails {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "headquarters", skip_serializing_if = "Option::is_none")]
    pub headquarters: Option<String>,
    #[serde(rename = "homepage", skip_serializing_if = "Option::is_none")]
    pub homepage: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "logo_path", skip_serializing_if = "Option::is_none")]
    pub logo_path: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "origin_country", skip_serializing_if = "Option::is_none")]
    pub origin_country: Option<String>,
    #[serde(rename = "parent_company", skip_serializing_if = "Option::is_none")]
    pub parent_company: Option<CompanyObject>,
}

impl CompanyDetails {
    pub fn new() -> CompanyDetails {
        CompanyDetails {
            description: None,
            headquarters: None,
            homepage: None,
            logo_path: None,
            id: None,
            name: None,
            origin_country: None,
            parent_company: None,
        }
    }
}
