/*
 * API
 *
 * ## Welcome  This is a place to put general notes and extra information, for internal use.  To get started designing/documenting this API, select a version on the left. # Title No Description
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct EpisodeGroupDetails {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "episode_count", skip_serializing_if = "Option::is_none")]
    pub episode_count: Option<i32>,
    #[serde(rename = "group_count", skip_serializing_if = "Option::is_none")]
    pub group_count: Option<i32>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "network", skip_serializing_if = "Option::is_none")]
    pub network: Option<crate::models::Network>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<i32>,
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<crate::models::EpisodeGroupGroup>>,
}

impl EpisodeGroupDetails {
    pub fn new() -> EpisodeGroupDetails {
        EpisodeGroupDetails {
            description: None,
            episode_count: None,
            group_count: None,
            id: None,
            name: None,
            network: None,
            _type: None,
            groups: None,
        }
    }
}


