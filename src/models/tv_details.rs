/*
 * API
 *
 * ## Welcome  This is a place to put general notes and extra information, for internal use.  To get started designing/documenting this API, select a version on the left. # Title No Description
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct TvDetails {
    #[serde(rename = "backdrop_path", skip_serializing_if = "Option::is_none")]
    pub backdrop_path: Option<String>,
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Vec<crate::models::Creator>>,
    #[serde(rename = "episode_run_time", skip_serializing_if = "Option::is_none")]
    pub episode_run_time: Option<Vec<i32>>,
    #[serde(rename = "first_air_date", skip_serializing_if = "Option::is_none")]
    pub first_air_date: Option<String>,
    #[serde(rename = "genres", skip_serializing_if = "Option::is_none")]
    pub genres: Option<Vec<crate::models::Genre>>,
    #[serde(rename = "homepage", skip_serializing_if = "Option::is_none")]
    pub homepage: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "in_production", skip_serializing_if = "Option::is_none")]
    pub in_production: Option<bool>,
    #[serde(rename = "languages", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Vec<String>>,
    #[serde(rename = "last_air_date", skip_serializing_if = "Option::is_none")]
    pub last_air_date: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "networks", skip_serializing_if = "Option::is_none")]
    pub networks: Option<Vec<crate::models::Network>>,
    #[serde(rename = "number_of_episodes", skip_serializing_if = "Option::is_none")]
    pub number_of_episodes: Option<i32>,
    #[serde(rename = "number_of_seasons", skip_serializing_if = "Option::is_none")]
    pub number_of_seasons: Option<i32>,
    #[serde(rename = "origin_country", skip_serializing_if = "Option::is_none")]
    pub origin_country: Option<Vec<String>>,
    #[serde(rename = "original_language", skip_serializing_if = "Option::is_none")]
    pub original_language: Option<String>,
    #[serde(rename = "original_name", skip_serializing_if = "Option::is_none")]
    pub original_name: Option<String>,
    #[serde(rename = "overview", skip_serializing_if = "Option::is_none")]
    pub overview: Option<String>,
    #[serde(rename = "popularity", skip_serializing_if = "Option::is_none")]
    pub popularity: Option<f32>,
    #[serde(rename = "poster_path", skip_serializing_if = "Option::is_none")]
    pub poster_path: Option<String>,
    #[serde(
        rename = "production_companies",
        skip_serializing_if = "Option::is_none"
    )]
    pub production_companies: Option<Vec<crate::models::CompanyObject>>,
    #[serde(rename = "seasons", skip_serializing_if = "Option::is_none")]
    pub seasons: Option<Vec<crate::models::SeasonObject>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "vote_average", skip_serializing_if = "Option::is_none")]
    pub vote_average: Option<f32>,
    #[serde(rename = "vote_count", skip_serializing_if = "Option::is_none")]
    pub vote_count: Option<i32>,
    // "append-to" options
    #[serde(rename = "alternative_titles", skip_serializing_if = "Option::is_none")]
    pub alternative_titles: Option<crate::models::Credits>,
    #[serde(rename = "changes", skip_serializing_if = "Option::is_none")]
    pub changes: Option<crate::models::ChangeDetails>,
    #[serde(rename = "content_ratings", skip_serializing_if = "Option::is_none")]
    pub content_ratings: Option<crate::models::RatingsList>,
    #[serde(rename = "credits", skip_serializing_if = "Option::is_none")]
    pub credits: Option<crate::models::Credits>,
    #[serde(rename = "episode_groups", skip_serializing_if = "Option::is_none")]
    pub episode_groups: Option<crate::models::EpisodeGroupList>,
    #[serde(rename = "external_ids", skip_serializing_if = "Option::is_none")]
    pub external_ids: Option<crate::models::ExternalIds>,
    #[serde(rename = "images", skip_serializing_if = "Option::is_none")]
    pub images: Option<crate::models::Images>,
    #[serde(rename = "keywords", skip_serializing_if = "Option::is_none")]
    pub keywords: Option<crate::models::KeywordsList>,
    #[serde(rename = "lists", skip_serializing_if = "Option::is_none")]
    pub lists: Option<crate::models::ListsPaginated>,
    #[serde(rename = "recommendations", skip_serializing_if = "Option::is_none")]
    pub recommendations: Option<crate::models::TvPaginated>,
    #[serde(rename = "release_dates", skip_serializing_if = "Option::is_none")]
    pub release_dates: Option<crate::models::ReleaseDatesList>,
    #[serde(rename = "reviews", skip_serializing_if = "Option::is_none")]
    pub reviews: Option<crate::models::ReviewsPaginated>,
    #[serde(rename = "similar", skip_serializing_if = "Option::is_none")]
    pub screened_theatrically: Option<crate::models::SeasonEpisodeList>,
    #[serde(rename = "screened_theatrically", skip_serializing_if = "Option::is_none")]
    pub similar: Option<crate::models::TvPaginated>,
    #[serde(rename = "translations", skip_serializing_if = "Option::is_none")]
    pub translations: Option<crate::models::TranslationsList>,
    #[serde(rename = "videos", skip_serializing_if = "Option::is_none")]
    pub videos: Option<crate::models::VideosList>,
}

impl TvDetails {
    pub fn new() -> TvDetails {
        TvDetails {
            backdrop_path: None,
            created_by: None,
            episode_run_time: None,
            first_air_date: None,
            genres: None,
            homepage: None,
            id: None,
            in_production: None,
            languages: None,
            last_air_date: None,
            name: None,
            networks: None,
            number_of_episodes: None,
            number_of_seasons: None,
            origin_country: None,
            original_language: None,
            original_name: None,
            overview: None,
            popularity: None,
            poster_path: None,
            production_companies: None,
            seasons: None,
            status: None,
            _type: None,
            vote_average: None,
            vote_count: None,
            alternative_titles: None,
            changes: None,
            content_ratings: None,
            credits: None,
            episode_groups: None,
            external_ids: None,
            images: None,
            keywords: None,
            lists: None,
            recommendations: None,
            release_dates: None,
            reviews: None,
            screened_theatrically: None,
            similar: None,
            translations: None,
            videos: None,
        }
    }
}
